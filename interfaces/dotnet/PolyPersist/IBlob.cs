 
// <auto-generated>
//     This code was generated by unicontract
//     see more information: https://github.com/gyorgy-gulyas/UniContract
//
//     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>

using System;
using System.Threading.Tasks;
using System.Collections.Generic;

namespace PolyPersist
{
	/// The IBlob interface represents a single blob entity in the storage system.
	/// It extends the IEntity interface to inherit basic entity properties like ID and ETag.
	/// This interface adds file-specific metadata, such as the file's name and content type.
	///
	/// Examples:
	/// - A PDF document with the file name "Report.pdf" and MIME type "application/pdf".
	/// - An image with the file name "photo.png" and MIME type "image/png".
	public interface IBlob : IEntity
	{
		/// The 'fileName' property represents the name of the file as stored in the system.
		/// It is primarily used for identification and user-friendly display purposes.
		///
		/// Key Characteristics:
		/// - Human-readable.
		/// - May include file extensions like '.pdf' or '.txt'.
		/// - Used in UI to display file names.
		///
		/// Example:
		/// If a report is stored as 'Monthly_Report.pdf', this property holds the value 'Monthly_Report.pdf'.
		/// Applications might use this value to display file names in lists or download dialogs.
		public string fileName { get; set;}
		/// The 'contentType' property represents the MIME type of the file.
		/// It helps systems understand the type of content stored and how to handle or render it.
		///
		/// Key Characteristics:
		/// - Standardized MIME type format (e.g., 'text/plain', 'application/pdf', 'image/png').
		/// - Critical for setting HTTP headers or determining file previews.
		///
		/// Examples of MIME Types:
		/// - 'text/plain': Plain text files.
		/// - 'application/pdf': PDF documents.
		/// - 'image/jpeg': JPEG images.
		///
		/// Use Cases:
		/// - When downloading files, this property can be used to set the correct `Content-Type` header.
		/// - In a document viewer, it determines how the file should be displayed (e.g., as a PDF preview).
		public string contentType { get; set;}
	}
}
